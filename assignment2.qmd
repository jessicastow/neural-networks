---
title: "Assignment 2"
format: pdf
author: "Jessica Stow (STWJES003@MYUCT.AC.ZA)"
date: "14 October 2024"
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,
                      error = FALSE,
                      include = FALSE,
                      warning = FALSE, 
                      cache = TRUE)
```

# View this report on my GitHub profile!

This report's repository can be viewed on [my GitHub profile](https://github.com/jessicastow/neural-networks).

# Plagiarism declaration

-   I know that plagiarism is wrong.

-   Plagiarism is to use another’s work and pretend that it is one’s own.

-   I have used the required convention for citation and referencing.

-   Each contribution to and quotation in this assignment from the work(s) of other people has been attributed, and has been cited and referenced.

-   This assignment is my own work.

-   I have not allowed, and will not allow, anyone to copy my work with the intention of passing it off as his or her own work.

-   I acknowledge that copying someone else’s assignment or essay, or part of it, is wrong, and declare that this is my own work.

\newpage

```{r setup, include=FALSE}
library(reticulate)
reticulate::use_virtualenv("r-keras", required = TRUE)  
library(tidyverse)
library(keras3)

```

# Classification task

```{r}
classification <- read.csv("data/Data-classification.csv")
```



```{r}
str(classification[,1:21]) # Look at predictor variables
unique(classification$Target) # Look at target variables
```
## Data preprocessing

### Make the target variable

```{r}
classification_target <- classification$Target
str(classification_target) # of type integer 
```

### Make features

```{r}
classification_features <- classification[,1:21]
```

## Split into test and train data

First we set the seed for reproducibility
```{r}
# Determine sample size
set.seed(123)
ind <- sample(1:2, nrow(classification), 
              replace=TRUE, 
              prob=c(0.8, 0.2))

# Split features
x_train <- classification_features[ind==1, ]
x_test <- classification_features[ind==2, ]

# Split target
y_train <- classification_target[ind==1]
y_test <- classification_target[ind==2]
```

## Scale features

```{r}
x_train <- scale(x_train)

# Confirm means and std devs are now 0 and 1
apply(x_train, 2, mean)

apply(x_train, 2, sd)
```
```{r}
attributes(x_train) # previous means and sds stored here
```
One-hot encoding
Convert target to binary "dummy" variables

```{r}
y_train <- keras3::to_categorical(y_train)
y_test_original <- y_test
y_test <- keras3::to_categorical(y_test)

dim(y_train)
```

## Model building 

# Regression task

```{r}
regression <- read.csv("data/Data-regression.csv")
str(regression)
```

```{r}
regression$target
```


